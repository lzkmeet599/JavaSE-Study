public class Person{
	public String name ;
	public int age;
	public String course;//课程
	public String interest;//兴趣 
	public void showName(){//驼峰命名法
		System.out.println("姓名："+name);
	}
	public int getAge(){
		return age ;//返回的数据类型与方法定义的一致。
	}
}
//方法中可以调用方法，但是不能定义方法
//同一个类中的方法可以直接调用，不需要new。

/*方法的重载*/
//多个相同的名称方法如果想要在一个类中共存，那么这些同名方法一定是参数的个数或者参数的数据类型不一样
//这样的同名方法叫做重载
public void mOL(int i ){
	System.out.print(i*i*i);
}
public void mOL(int x,int y){
	System.out.print(x*y);
}
public void mOL(String s ){
	System.out.print(s);
}

/*方法的可变形参*/
//第一种方式：数组
public void printInfo(String[] args){
	for(int i = 0 ;i<args.length;i++){
		System.out.println(args[i]);
	}
}
//第二种方式：用Java特有的...方式来传递可变个数的参数，使用方法与数组的使用方式相同
public void printInfo(String... args){//形参数据类型是可变的。int char 等等
	for(int i = 0 ;i<args.length;i++){
		System.out.println(args[i]);
	}
}
//这种...代表可以传递0到多个参数
//...这种可变参数需要放在所有形参的最后
//public void printInfo(int i,char j,int... args) 

/*方法的参数传递*/
//方法只有被调用才有意义
//基本数据类型值保存在栈中，引用对象值保存在堆中，地址保存在栈中。
//1 如果方法的形参是基本数据类型，那么实参向形参传递参数时，就是直接传递值，把实参的值赋值给形参
//2 如果方法的形参是对象，那么实参（实际的对象），向形参传递参数时，也是把值给形参，这个值是实参在栈内存中的值，也就是引用对象在堆中的地址






















